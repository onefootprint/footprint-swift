//
// My1fpAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class My1fpAPI {

    /**

     - parameter openAPIClient: The OpenAPIClient that contains the configuration for the http request.
     - returns: [AuthorizedOrg]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func hostedUserAuthorizedOrgsGet(openAPIClient: OpenAPIClient = OpenAPIClient.shared) async throws(ErrorResponse) -> [AuthorizedOrg] {
        return try await hostedUserAuthorizedOrgsGetWithRequestBuilder(openAPIClient: openAPIClient).execute().body
    }

    /**
     - GET /hosted/user/authorized_orgs
     - Returns a list of organizations onto which the user has onboarded
     - API Key:
       - type: apiKey X-Fp-Authorization (HEADER)
       - name: UserToken
     - parameter openAPIClient: The OpenAPIClient that contains the configuration for the http request.
     - returns: RequestBuilder<[AuthorizedOrg]> 
     */
    open class func hostedUserAuthorizedOrgsGetWithRequestBuilder(openAPIClient: OpenAPIClient = OpenAPIClient.shared) -> RequestBuilder<[AuthorizedOrg]> {
        let localVariablePath = "/hosted/user/authorized_orgs"
        let localVariableURLString = openAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[AuthorizedOrg]>.Type = openAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, openAPIClient: openAPIClient)
    }
}
