//
// GetDeviceAttestationChallengeRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GetDeviceAttestationChallengeRequest: Codable, JSONEncodable, Hashable {

    public enum DeviceType: String, Codable, CaseIterable {
        case ios = "ios"
        case android = "android"
    }
    /** required if running footprint sdk in android */
    public var androidPackageName: String?
    public var deviceType: DeviceType
    /** required if running footprint sdk in ios */
    public var iosBundleId: String?

    public init(androidPackageName: String? = nil, deviceType: DeviceType, iosBundleId: String? = nil) {
        self.androidPackageName = androidPackageName
        self.deviceType = deviceType
        self.iosBundleId = iosBundleId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case androidPackageName = "android_package_name"
        case deviceType = "device_type"
        case iosBundleId = "ios_bundle_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(androidPackageName, forKey: .androidPackageName)
        try container.encode(deviceType, forKey: .deviceType)
        try container.encodeIfPresent(iosBundleId, forKey: .iosBundleId)
    }
}

