//
// DocumentRequirement.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DocumentRequirement: Codable, JSONEncodable, Hashable {

    public enum Kind: String, Codable, CaseIterable {
        case collectDocument = "collect_document"
    }
    public enum UploadSettings: String, Codable, CaseIterable {
        case preferCapture = "prefer_capture"
        case preferUpload = "prefer_upload"
        case captureonlyonmobile = "captureOnlyOnMobile"
    }
    public var kind: Kind
    public var isMet: Bool
    public var documentRequestId: String
    public var uploadSettings: UploadSettings
    public var config: [String: JSONValue]

    public init(kind: Kind, isMet: Bool, documentRequestId: String, uploadSettings: UploadSettings, config: [String: JSONValue]) {
        self.kind = kind
        self.isMet = isMet
        self.documentRequestId = documentRequestId
        self.uploadSettings = uploadSettings
        self.config = config
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case kind
        case isMet = "is_met"
        case documentRequestId = "document_request_id"
        case uploadSettings = "upload_settings"
        case config
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(kind, forKey: .kind)
        try container.encode(isMet, forKey: .isMet)
        try container.encode(documentRequestId, forKey: .documentRequestId)
        try container.encode(uploadSettings, forKey: .uploadSettings)
        try container.encode(config, forKey: .config)
    }
}

