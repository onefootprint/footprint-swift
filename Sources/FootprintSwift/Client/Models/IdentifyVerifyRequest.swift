//
// IdentifyVerifyRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct IdentifyVerifyRequest: Codable, JSONEncodable, Hashable {

    public enum Scope: String, Codable, CaseIterable {
        case my1fp = "my1fp"
        case onboarding = "onboarding"
        case auth = "auth"
    }
    public var challengeResponse: String
    /** Opaque challenge state token */
    public var challengeToken: String
    /** Determines which scopes the issued auth token will have. Request the correct scopes for your  use case in order to get the least permissions required */
    public var scope: Scope

    public init(challengeResponse: String, challengeToken: String, scope: Scope) {
        self.challengeResponse = challengeResponse
        self.challengeToken = challengeToken
        self.scope = scope
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case challengeResponse = "challenge_response"
        case challengeToken = "challenge_token"
        case scope
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(challengeResponse, forKey: .challengeResponse)
        try container.encode(challengeToken, forKey: .challengeToken)
        try container.encode(scope, forKey: .scope)
    }
}

