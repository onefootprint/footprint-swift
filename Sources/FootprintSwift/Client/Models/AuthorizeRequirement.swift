//
// AuthorizeRequirement.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct AuthorizeRequirement: Codable, JSONEncodable, Hashable {

    public enum Kind: String, Codable, CaseIterable {
        case authorize = "authorize"
    }
    public var kind: Kind
    public var isMet: Bool
    public var fieldsToAuthorize: [String: JSONValue]

    public init(kind: Kind, isMet: Bool, fieldsToAuthorize: [String: JSONValue]) {
        self.kind = kind
        self.isMet = isMet
        self.fieldsToAuthorize = fieldsToAuthorize
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case kind
        case isMet = "is_met"
        case fieldsToAuthorize = "fields_to_authorize"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(kind, forKey: .kind)
        try container.encode(isMet, forKey: .isMet)
        try container.encode(fieldsToAuthorize, forKey: .fieldsToAuthorize)
    }
}

