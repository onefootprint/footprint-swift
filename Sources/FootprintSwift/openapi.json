{
  "openapi": "3.0.0",
  "info": {
    "title": "Footprint API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.onefootprint.com",
      "description": "Prod"
    },
    {
      "url": "https://api.dev.onefootprint.com",
      "description": "Dev"
    }
  ],
  "paths": {
    "/hosted/business": {
      "get": {
        "tags": [
          "Businesses",
          "Hosted"
        ],
        "description": "Get information about the business for which we started a KYC of a beneficial owner",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostedBusiness"
                }
              }
            }
          }
        },
        "security": [
          {
            "BusinessOwnerToken": []
          }
        ]
      }
    },
    "/hosted/business/vault": {
      "patch": {
        "tags": [
          "Businesses",
          "Hosted",
          "Vault"
        ],
        "description": "Updates data in a business vault. Can be used to update `business.` data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawBusinessDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/business/vault/decrypt": {
      "post": {
        "tags": [
          "Vault",
          "User",
          "Hosted"
        ],
        "description": "Decrypts the specified list of fields from the provided vault.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDecryptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessDecryptResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/business/vault/validate": {
      "post": {
        "tags": [
          "Businesses",
          "Hosted",
          "Vault"
        ],
        "description": "Checks if provided vault data is valid before adding it to the business vault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawBusinessDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/check_session": {
      "get": {
        "tags": [
          "Hosted"
        ],
        "description": "Checks a hosted session token for expiration/validity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckSessionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "SessionToken": []
          }
        ]
      }
    },
    "/hosted/documents": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Create a new document for the outstanding document request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/documents/{id}/process": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Process the document and run any vendor verifications.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/documents/{id}/upload/{side}": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Upload an image for the given side to the provided document.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "side",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "front",
                "back",
                "selfie"
              ]
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/identify": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Tries to identify an existing user by either phone number or email. If the user is found, returns available challenge kinds.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Sandbox-Id",
            "description": "When provided, creates a sandbox user with the provided sandbox ID. Sandbox IDs allow you to create multiple users with the same contact info. In order to log in using an existing sandbox user, you can provide its Sandbox ID in the Footprint flow.\n            ",
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Onboarding-Config-Key",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OnboardingConfigPublishableKey": []
          },
          {
            "OnboardingConfigToken": []
          },
          {
            "BusinessOwnerToken": []
          },
          {
            "UserToken": []
          }
        ],
        "operationId": "identify"
      }
    },
    "/hosted/identify/kba": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Respond to a KBA challenge to prove knowledge of existing data in the vault.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawUserDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KbaResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/identify/lite": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Tries to identify an existing user by either phone number or email and returns whether a user exists. This is used exclusively in our SDK to check proactively if bootstrapped data identifies an existing user. This is very similar to the normal identify API, but it has a much simpler API will hopefully be more stable than the normal identify API since changes will break old SDK versions.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiteIdentifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiteIdentifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OnboardingConfigPublishableKey": []
          },
          {
            "OnboardingConfigToken": []
          },
          {
            "BusinessOwnerToken": []
          }
        ]
      }
    },
    "/hosted/identify/login_challenge": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Sends a challenge to the phone number and returns an HTTP 200. When the challenge is completed through the identify/verify endpoint, the client can get or create the user with this phone number.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ],
        "operationId": "loginChallenge",
        "summary": "Login Challenge",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/identify/signup_challenge": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Sends a challenge to a phone number or email and returns an HTTP 200. When the challenge is completed through the identify/verify endpoint, the client can begin onboarding the user.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Sandbox-Id",
            "description": "When provided, creates a sandbox user with the provided sandbox ID. Sandbox IDs allow you to create multiple users with the same contact info. In order to log in using an existing sandbox user, you can provide its Sandbox ID in the Footprint flow.\n            ",
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "X-Fp-Is-Components-Sdk",
            "description": "When a non-empty value is provided, indicates that the request is originating from the components SDK",
            "schema": {
              "type": "boolean"
            },
            "style": "simple"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Onboarding-Config-Key",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OnboardingConfigPublishableKey": []
          },
          {
            "OnboardingConfigToken": []
          },
          {
            "BusinessOwnerToken": []
          }
        ],
        "operationId": "signupChallenge",
        "summary": "Signup Challenge"
      }
    },
    "/hosted/identify/validation_token": {
      "post": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Generate a validation token after the user finishes the identify flow.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostedValidateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ],
        "operationId": "validationToken",
        "summary": "Get Validation Token"
      }
    },
    "/hosted/identify/verify": {
      "post": {
        "tags": [
          "Identify",
          "Hosted"
        ],
        "description": "Verifies the response to either an SMS or biometric challenge. When the challenge response is verified, we will return an auth token for the user. If no user exists (which may only happen after a phone challenge), we will create a new user with the provided phone number",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifyVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentifyVerifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ],
        "summary": "Verify",
        "operationId": "verify",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Onboarding-Config-Key",
            "required": true
          }
        ]
      }
    },
    "/hosted/onboarding": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Gets or creates the Onboarding for this (user, ob_config) pair.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOnboardingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          },
          {
            "OnboardingConfigPublishableKey": []
          },
          {
            "OnboardingConfigToken": []
          },
          {
            "BusinessOwnerToken": []
          }
        ],
        "operationId": "onboarding",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/onboarding/authorize": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Mark the onboarding as authorized and initiate IDV checks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/config": {
      "get": {
        "tags": [
          "Onboarding",
          "Organization",
          "Hosted"
        ],
        "description": "Get the details of an onboarding configuration.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicOnboardingConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "OnboardingConfigPublishableKey": []
          },
          {
            "OnboardingConfigToken": []
          },
          {
            "BusinessOwnerToken": []
          },
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true,
            "name": "X-Onboarding-Config-Key"
          }
        ],
        "summary": "Onboarding Config",
        "operationId": "getOnboardingConfig"
      }
    },
    "/hosted/onboarding/d2p/generate": {
      "post": {
        "tags": [
          "D2p",
          "Hosted"
        ],
        "description": "Generates a new d2p session token for the currently authenticated user. The d2p session token has a limited scope, and also includes some status metadata for syncing state across the phone and desktop.",
        "operationId": "hosted-onboarding-d2p-generate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/D2pGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/D2pGenerateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/d2p/sms": {
      "post": {
        "tags": [
          "D2p",
          "Hosted"
        ],
        "description": "Send an SMS with a link to the phone onboarding page.",
        "operationId": "hosted-onboarding-d2p-sms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/D2pSmsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/D2pSmsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/d2p/status": {
      "get": {
        "tags": [
          "D2p",
          "Hosted"
        ],
        "description": "Gets the status of the provided d2p session. Requires the d2p session token as the auth header.",
        "operationId": "hosted-onboarding-d2p-status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/D2pStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "D2p",
          "Hosted"
        ],
        "description": "Update the status of the provided d2p session. Only allows updating to certain statuses.",
        "operationId": "hosted-onboarding-d2p-status-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/D2pUpdateStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/fp": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Records a fingerprint visitorID for the Fingerprint SDK in the frontend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FingerprintVisitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/nid": {
      "get": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Retrieve identifier used for NeuroId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeuroIdentityIdResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/privacy_pass": {
      "get": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "initiates privacy pass protocol.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/process": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Continue processing the onboarding after user this stage of user input has finished",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ],
        "operationId": "process",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/onboarding/sds": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Records a deviceSessionId from the Socure Device SDK in the frontend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocureDeviceSessionIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/session": {
      "get": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Fetch information from an existing onboarding session token.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingSessionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Onboardingtoken": []
          }
        ]
      }
    },
    "/hosted/onboarding/skip_passkey_register": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Tells us that a passkey registration was skipped",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkipPasskeyRegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/status": {
      "get": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Returns the status of the onboarding.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ],
        "operationId": "onboardingStatus",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/onboarding/tel": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Performs a lookup with Stytch on the passed up telemetry_id and records the response + risk signals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StytchTelemetryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/timeline": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Log a timeline event for this user using a frontend-provided page identifier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingTimelineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/onboarding/validate": {
      "post": {
        "tags": [
          "Onboarding",
          "Hosted"
        ],
        "description": "Finish onboarding the user. Returns the validation token that can be exchanged for a permanent Footprint user token.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostedValidateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          },
          {
            "UserOnboardingToken": []
          }
        ],
        "operationId": "validateOnboarding",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/user/attest_device": {
      "post": {
        "tags": [
          "Hosted"
        ],
        "summary": "receive the attestation",
        "description": "Parses and accepts a user's onboarding device attestation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceAttestationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/attest_device/challenge": {
      "post": {
        "tags": [
          "Hosted"
        ],
        "summary": "initiate the attestation challenge",
        "description": "Generate a device attestation challenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDeviceAttestationChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceAttestationChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/auth_methods": {
      "get": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Returns information about the auth methods this user has registered.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthMethod"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/auth_requirements": {
      "get": {
        "tags": [
          "Challenge",
          "Hosted"
        ],
        "description": "Returns the set of auth requirements to satisfy the auth portion of the playbook in the provided session",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRequirementsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/authorized_orgs": {
      "get": {
        "tags": [
          "My1fp",
          "Hosted"
        ],
        "description": "Returns a list of organizations onto which the user has onboarded",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizedOrg"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/challenge": {
      "post": {
        "tags": [
          "Challenge",
          "Hosted"
        ],
        "description": "Sends a challenge of the requested kind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/challenge/verify": {
      "post": {
        "tags": [
          "Challenge",
          "Hosted"
        ],
        "description": "Verify the previously sent challenge and attach the new form of contact info to the vault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChallengeVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/consent": {
      "post": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Records a user's consent to collection of their images.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/user/documents": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Create a new document for the outstanding document request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/user/documents/{id}/process": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Process the document and run any vendor verifications.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/user/documents/{id}/upload/{side}": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "Upload an image for the given side to the provided document.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "side",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "front",
                "back",
                "selfie"
              ]
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/user/email/verify": {
      "post": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Used to asynchronously verify a user's email address. Requires the token sent to the users email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/hosted/user/private_info": {
      "get": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Returns information about the auth token. Can only be used in sandbox mode for demo tenants.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/token": {
      "get": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Returns information about a given auth token.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserTokenResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ]
      }
    },
    "/hosted/user/tokens": {
      "post": {
        "tags": [
          "User",
          "Hosted"
        ],
        "description": "Create a new token with the requested scopes using the permissions granted by the existing token. Used to create a secondary token with more limited scope. The new token's expiry time is the same as the old token's",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserTokenResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ],
        "operationId": "vaultingToken"
      }
    },
    "/hosted/user/upload/{document_identifier}": {
      "post": {
        "tags": [
          "Document",
          "Hosted"
        ],
        "description": "POSTs a document to the vault",
        "parameters": [
          {
            "in": "path",
            "name": "document_identifier",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id.first_name",
                "id.middle_name",
                "id.last_name",
                "id.dob",
                "id.ssn4",
                "id.ssn9",
                "id.address_line1",
                "id.address_line2",
                "id.city",
                "id.state",
                "id.zip",
                "id.country",
                "id.email",
                "id.phone_number",
                "id.us_legal_status",
                "id.visa_kind",
                "id.visa_expiration_date",
                "id.nationality",
                "id.citizenships",
                "id.drivers_license_number",
                "id.drivers_license_state",
                "id.itin",
                "id.us_tax_id",
                "business.name",
                "business.dba",
                "business.website",
                "business.phone_number",
                "business.tin",
                "business.address_line1",
                "business.address_line2",
                "business.city",
                "business.state",
                "business.zip",
                "business.country",
                "business.beneficial_owners",
                "business.kyced_beneficial_owners",
                "business.corporation_type",
                "business.formation_state",
                "business.formation_date",
                "custom.*",
                "investor_profile.employment_status",
                "investor_profile.occupation",
                "investor_profile.employer",
                "investor_profile.annual_income",
                "investor_profile.net_worth",
                "investor_profile.investment_goals",
                "investor_profile.risk_tolerance",
                "investor_profile.declarations",
                "investor_profile.brokerage_firm_employer",
                "investor_profile.senior_executive_symbols",
                "investor_profile.family_member_names",
                "investor_profile.political_organization",
                "investor_profile.funding_sources",
                "document.id_card.front.image",
                "document.id_card.front.mime_type",
                "document.id_card.back.image",
                "document.id_card.back.mime_type",
                "document.id_card.selfie.image",
                "document.id_card.selfie.mime_type",
                "document.id_card.full_name",
                "document.id_card.dob",
                "document.id_card.gender",
                "document.id_card.full_address",
                "document.id_card.document_number",
                "document.id_card.expires_at",
                "document.id_card.issued_at",
                "document.id_card.issuing_state",
                "document.id_card.issuing_country",
                "document.id_card.ref_number",
                "document.id_card.nationality",
                "document.id_card.curp",
                "document.id_card.classified_document_type",
                "document.id_card.curp_validation_response",
                "document.drivers_license.front.image",
                "document.drivers_license.front.mime_type",
                "document.drivers_license.back.image",
                "document.drivers_license.back.mime_type",
                "document.drivers_license.selfie.image",
                "document.drivers_license.selfie.mime_type",
                "document.drivers_license.full_name",
                "document.drivers_license.dob",
                "document.drivers_license.gender",
                "document.drivers_license.full_address",
                "document.drivers_license.document_number",
                "document.drivers_license.expires_at",
                "document.drivers_license.issued_at",
                "document.drivers_license.issuing_state",
                "document.drivers_license.issuing_country",
                "document.drivers_license.ref_number",
                "document.drivers_license.nationality",
                "document.drivers_license.curp",
                "document.drivers_license.classified_document_type",
                "document.drivers_license.curp_validation_response",
                "document.passport.front.image",
                "document.passport.front.mime_type",
                "document.passport.back.image",
                "document.passport.back.mime_type",
                "document.passport.selfie.image",
                "document.passport.selfie.mime_type",
                "document.passport.full_name",
                "document.passport.dob",
                "document.passport.gender",
                "document.passport.full_address",
                "document.passport.document_number",
                "document.passport.expires_at",
                "document.passport.issued_at",
                "document.passport.issuing_state",
                "document.passport.issuing_country",
                "document.passport.ref_number",
                "document.passport.nationality",
                "document.passport.curp",
                "document.passport.classified_document_type",
                "document.passport.curp_validation_response",
                "document.passport_card.front.image",
                "document.passport_card.front.mime_type",
                "document.passport_card.back.image",
                "document.passport_card.back.mime_type",
                "document.passport_card.selfie.image",
                "document.passport_card.selfie.mime_type",
                "document.passport_card.full_name",
                "document.passport_card.dob",
                "document.passport_card.gender",
                "document.passport_card.full_address",
                "document.passport_card.document_number",
                "document.passport_card.expires_at",
                "document.passport_card.issued_at",
                "document.passport_card.issuing_state",
                "document.passport_card.issuing_country",
                "document.passport_card.ref_number",
                "document.passport_card.nationality",
                "document.passport_card.curp",
                "document.passport_card.classified_document_type",
                "document.passport_card.curp_validation_response",
                "document.permit.front.image",
                "document.permit.front.mime_type",
                "document.permit.back.image",
                "document.permit.back.mime_type",
                "document.permit.selfie.image",
                "document.permit.selfie.mime_type",
                "document.permit.full_name",
                "document.permit.dob",
                "document.permit.gender",
                "document.permit.full_address",
                "document.permit.document_number",
                "document.permit.expires_at",
                "document.permit.issued_at",
                "document.permit.issuing_state",
                "document.permit.issuing_country",
                "document.permit.ref_number",
                "document.permit.nationality",
                "document.permit.curp",
                "document.permit.classified_document_type",
                "document.permit.curp_validation_response",
                "document.visa.front.image",
                "document.visa.front.mime_type",
                "document.visa.back.image",
                "document.visa.back.mime_type",
                "document.visa.selfie.image",
                "document.visa.selfie.mime_type",
                "document.visa.full_name",
                "document.visa.dob",
                "document.visa.gender",
                "document.visa.full_address",
                "document.visa.document_number",
                "document.visa.expires_at",
                "document.visa.issued_at",
                "document.visa.issuing_state",
                "document.visa.issuing_country",
                "document.visa.ref_number",
                "document.visa.nationality",
                "document.visa.curp",
                "document.visa.classified_document_type",
                "document.visa.curp_validation_response",
                "document.residence_document.front.image",
                "document.residence_document.front.mime_type",
                "document.residence_document.back.image",
                "document.residence_document.back.mime_type",
                "document.residence_document.selfie.image",
                "document.residence_document.selfie.mime_type",
                "document.residence_document.full_name",
                "document.residence_document.dob",
                "document.residence_document.gender",
                "document.residence_document.full_address",
                "document.residence_document.document_number",
                "document.residence_document.expires_at",
                "document.residence_document.issued_at",
                "document.residence_document.issuing_state",
                "document.residence_document.issuing_country",
                "document.residence_document.ref_number",
                "document.residence_document.nationality",
                "document.residence_document.curp",
                "document.residence_document.classified_document_type",
                "document.residence_document.curp_validation_response",
                "document.voter_identification.front.image",
                "document.voter_identification.front.mime_type",
                "document.voter_identification.back.image",
                "document.voter_identification.back.mime_type",
                "document.voter_identification.selfie.image",
                "document.voter_identification.selfie.mime_type",
                "document.voter_identification.full_name",
                "document.voter_identification.dob",
                "document.voter_identification.gender",
                "document.voter_identification.full_address",
                "document.voter_identification.document_number",
                "document.voter_identification.expires_at",
                "document.voter_identification.issued_at",
                "document.voter_identification.issuing_state",
                "document.voter_identification.issuing_country",
                "document.voter_identification.ref_number",
                "document.voter_identification.nationality",
                "document.voter_identification.curp",
                "document.voter_identification.classified_document_type",
                "document.voter_identification.curp_validation_response",
                "document.finra_compliance_letter",
                "document.proof_of_address.image",
                "document.ssn_card.image",
                "document.custom.*",
                "card.*.number",
                "card.*.expiration",
                "card.*.cvc",
                "card.*.name",
                "card.*.billing_address.zip",
                "card.*.billing_address.country",
                "card.*.expiration_month",
                "card.*.expiration_year",
                "card.*.number_last4",
                "card.*.issuer",
                "bank.*.name",
                "bank.*.ach_routing_number",
                "bank.*.ach_account_number",
                "bank.*.ach_account_id",
                "bank.*.account_type"
              ]
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/hosted/user/vault": {
      "patch": {
        "tags": [
          "Vault",
          "Hosted",
          "Users"
        ],
        "description": "Updates data in a user vault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawUserDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultBadRequestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ],
        "operationId": "vault",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/user/vault/decrypt": {
      "post": {
        "tags": [
          "Vault",
          "User",
          "Hosted"
        ],
        "description": "Decrypts the specified list of fields from the provided vault.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDecryptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDecryptResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserToken": []
          }
        ],
        "operationId": "decryptUserVault",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Fp-Authorization",
            "required": true
          }
        ]
      }
    },
    "/hosted/user/vault/validate": {
      "post": {
        "tags": [
          "Vault",
          "Hosted",
          "Users"
        ],
        "description": "Checks if provided vault data is valid before adding it to the vault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawUserDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOnboardingToken": []
          }
        ]
      }
    },
    "/org/sdk_args": {
      "get": {
        "tags": [
          "SdkArgs",
          "Hosted"
        ],
        "description": "Fetch information from an existing SDK args session.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSdkArgsTokenResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "SDKArgsToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "SdkArgs",
          "Hosted"
        ],
        "description": "Create a new session containing args for the SDK.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SdkArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSdkArgsTokenResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/org/sdk_telemetry": {
      "post": {
        "tags": [
          "SdkArgs",
          "Hosted"
        ],
        "description": "Log contents of the HTTP body. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BusinessOwnerToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Kyb-Bo-Token",
        "description": "Token to initialize KYC of a business owner. Uniquely identifies a business and beneficial owner."
      },
      "OnboardingConfigPublishableKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Onboarding-Config-Key",
        "description": "Long-lived, publishable key representing an onboarding configuration. You can create and view your credentials in the dashboard."
      },
      "OnboardingConfigToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Onboarding-Session-Token",
        "description": "Short-lived token representing an onboarding configuration."
      },
      "Onboardingtoken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Fp-Ob-Token",
        "description": "Short-lived token representing onboarding arguments."
      },
      "SDKArgsToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Fp-Sdk-Args-Token",
        "description": "Short-lived token representing arguments for our SDK."
      },
      "SessionToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Fp-Authorization",
        "description": "Session token."
      },
      "UserOnboardingToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Fp-Authorization",
        "description": "Short-lived auth token for a user during bifrost. Issued by identify and contains scopes to perform specific user actions."
      },
      "UserToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Fp-Authorization",
        "description": "Short-lived auth token for a user. Issued by identify and contains scopes to perform specific user actions."
      }
    },
    "schemas": {
      "AuthMethod": {
        "type": "object",
        "properties": {
          "can_update": {
            "description": "True if the user's auth token doesn't restrict updating this auth method",
            "type": "boolean"
          },
          "is_verified": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "phone",
              "passkey",
              "email"
            ]
          }
        },
        "required": [
          "can_update",
          "is_verified",
          "kind"
        ]
      },
      "AuthRequirementsResponse": {
        "type": "object",
        "properties": {
          "all_requirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "is_met": {
                  "type": "boolean"
                }
              },
              "required": [
                "is_met"
              ]
            }
          }
        },
        "required": [
          "all_requirements"
        ]
      },
      "AuthorizedOrg": {
        "type": "object",
        "properties": {
          "can_access_data": {
            "type": "array",
            "items": {
              "description": "Represent the options of allowed CollectedData.\n Some CollectedData variants only have a single allowable CollectedDataOption.\n Other CollectedData variants may have multiple Options of assortments of data that can be\n collected. Each CollectedDataOption maps to a list of IdentityDataKinds that are represented by\n the CDO",
              "type": "string",
              "enum": [
                "Name",
                "Dob",
                "Ssn4",
                "Ssn9",
                "FullAddress",
                "Email",
                "PhoneNumber",
                "Nationality",
                "UsLegalStatus",
                "BusinessName",
                "BusinessTin",
                "BusinessAddress",
                "BusinessPhoneNumber",
                "BusinessWebsite",
                "BusinessBeneficialOwners",
                "BusinessKycedBeneficialOwners",
                "BusinessCorporationType",
                "InvestorProfile",
                "Card",
                "UsTaxId",
                "Bank"
              ]
            }
          },
          "logo_url": {
            "type": "string"
          },
          "org_name": {
            "type": "string"
          }
        },
        "required": [
          "can_access_data",
          "org_name"
        ]
      },
      "BusinessDecryptResponse": {
        "example": {
          "business.name": "Acme Bank",
          "business.website": "acmebank.org"
        },
        "description": "A key-value map with the corresponding decrypted values",
        "type": "object",
        "properties": {
          "<key>": {
            "type": "string",
            "enum": [
              "business.name",
              "business.dba",
              "business.website",
              "business.phone_number",
              "business.tin",
              "business.address_line1",
              "business.address_line2",
              "business.city",
              "business.state",
              "business.zip",
              "business.country",
              "business.beneficial_owners",
              "business.kyced_beneficial_owners",
              "business.corporation_type",
              "business.formation_state",
              "business.formation_date",
              "custom.*"
            ]
          },
          "<value>": {
            "type": "object"
          }
        },
        "required": [
          "<key>",
          "<value>"
        ]
      },
      "CheckSessionResponse": {
        "type": "string",
        "enum": [
          "active",
          "expired",
          "unknown"
        ]
      },
      "ConsentRequest": {
        "type": "object",
        "properties": {
          "consent_language_text": {
            "type": "string"
          },
          "ml_consent": {
            "type": "boolean"
          }
        },
        "required": [
          "consent_language_text"
        ]
      },
      "CreateDeviceAttestationRequest": {
        "type": "object",
        "properties": {
          "attestation": {
            "description": "base64 encoded attestation",
            "type": "string"
          },
          "state": {
            "description": "state from `DeviceAttestationChallengeResponse`",
            "type": "string"
          }
        },
        "required": [
          "attestation",
          "state"
        ]
      },
      "CreateDocumentRequest": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "enum": [
              "TW",
              "AF",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "VG",
              "BN",
              "BG",
              "BF",
              "BI",
              "CV",
              "KH",
              "CM",
              "CA",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "HK",
              "MO",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CK",
              "CR",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "CI",
              "KP",
              "CD",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "KR",
              "MD",
              "RO",
              "RU",
              "RW",
              "RE",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "PS",
              "SD",
              "SR",
              "SJ",
              "SE",
              "CH",
              "SY",
              "TJ",
              "TH",
              "MK",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "TZ",
              "UM",
              "VI",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW",
              "AX"
            ]
          },
          "device_type": {
            "type": "string",
            "enum": [
              "desktop",
              "mobile"
            ]
          },
          "document_type": {
            "type": "string",
            "enum": [
              "id_card",
              "drivers_license",
              "passport",
              "passport_card",
              "permit",
              "visa",
              "residence_document",
              "voter_identification",
              "ssn_card",
              "proof_of_address",
              "custom"
            ]
          },
          "fixture_result": {
            "type": "string",
            "enum": [
              "fail",
              "pass",
              "real"
            ]
          },
          "request_id": {
            "type": "string"
          },
          "skip_selfie": {
            "type": "boolean"
          }
        },
        "required": [
          "document_type"
        ]
      },
      "CreateDocumentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateOnboardingTimelineRequest": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          }
        },
        "required": [
          "event"
        ]
      },
      "CreateSdkArgsTokenResponse": {
        "type": "object",
        "properties": {
          "expires_at": {
            "description": "The time at which the token expires",
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "description": "The short-lived token that gives temporary access to perform operations for this user",
            "type": "string"
          }
        },
        "required": [
          "expires_at",
          "token"
        ]
      },
      "CreateUserTokenRequest": {
        "type": "object",
        "properties": {
          "requested_scope": {
            "type": "string",
            "enum": [
              "auth",
              "onboarding",
              "my1fp",
              "onboarding_components"
            ]
          }
        },
        "required": [
          "requested_scope"
        ],
        "title": ""
      },
      "CreateUserTokenResponse": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "description": "An cryptographically generated auth token to authenticate a session",
            "type": "string"
          }
        },
        "required": [
          "expires_at",
          "token"
        ]
      },
      "D2pGenerateRequest": {
        "type": "object",
        "properties": {
          "meta": {
            "description": "Embeds extra information in the d2p token to pass from the desktop to handoff session.\n NOTE: changes to this struct should be backwards-compatible since we may use this struct\n to deserialize old versions",
            "type": "object",
            "properties": {
              "l10n": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                }
              },
              "opener": {
                "type": "string"
              },
              "redirect_url": {
                "type": "string"
              },
              "sandbox_id_doc_outcome": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              },
              "style_params": {
                "type": "string"
              }
            }
          }
        }
      },
      "D2pGenerateResponse": {
        "type": "object",
        "properties": {
          "auth_token": {
            "description": "An cryptographically generated auth token to authenticate a session",
            "type": "string"
          }
        },
        "required": [
          "auth_token"
        ]
      },
      "D2pSmsRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ]
      },
      "D2pSmsResponse": {
        "type": "object",
        "properties": {
          "time_before_retry_s": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "time_before_retry_s"
        ]
      },
      "D2pStatusResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "description": "Embeds extra information in the d2p token to pass from the desktop to handoff session.\n NOTE: changes to this struct should be backwards-compatible since we may use this struct\n to deserialize old versions",
            "type": "object",
            "properties": {
              "l10n": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                }
              },
              "opener": {
                "type": "string"
              },
              "redirect_url": {
                "type": "string"
              },
              "sandbox_id_doc_outcome": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              },
              "style_params": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "in_progress",
              "canceled",
              "failed",
              "completed"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "D2pUpdateStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "in_progress",
              "canceled",
              "failed",
              "completed"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "DeviceAttestationChallengeResponse": {
        "type": "object",
        "properties": {
          "attestation_challenge": {
            "description": "attestation challenge to use",
            "type": "string"
          },
          "state": {
            "description": "state token to send back along with attestation",
            "type": "string"
          }
        },
        "required": [
          "attestation_challenge",
          "state"
        ]
      },
      "DocumentResponse": {
        "description": "Response for a identity document request. Errors are non-optional if the identity vendor.\n Requires additional images be collected.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "image_too_small",
                "document_missing_four_corners",
                "document_too_small",
                "document_border_too_small",
                "face_image_not_detected",
                "barcode_not_detected",
                "invalid_jpeg",
                "document_is_skewed",
                "internal_error",
                "image_error",
                "doc_type_mismatch",
                "unknown_document_type",
                "unsupported_document_type",
                "wrong_document_side",
                "wrong_one_sided_document",
                "document_not_readable",
                "unable_to_align_document",
                "id_type_not_acceptable",
                "selfie_face_not_found",
                "face_not_found",
                "selfie_low_confidence",
                "selfie_too_dark",
                "selfie_glare",
                "selfie_has_lenses",
                "selfie_has_face_mask",
                "selfie_blurry",
                "selfie_image_size_unsupported",
                "selfie_image_orientation_incorrect",
                "selfie_bad_image_compression",
                "drivers_license_permit_not_allowed",
                "unknown_country_code",
                "country_code_mismatch",
                "unknown_error",
                "document_glare",
                "document_sharpness",
                "military_id_not_allowed"
              ]
            }
          },
          "is_retry_limit_exceeded": {
            "type": "boolean"
          },
          "next_side_to_collect": {
            "type": "string",
            "enum": [
              "front",
              "back",
              "selfie"
            ]
          }
        },
        "required": [
          "errors",
          "is_retry_limit_exceeded"
        ]
      },
      "EmailVerifyRequest": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The token data in the email link fragment",
            "type": "string"
          }
        },
        "required": [
          "data"
        ]
      },
      "Empty": {
        "description": "Empty JSON.",
        "type": "object"
      },
      "FingerprintVisitRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "visitor_id": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "request_id",
          "visitor_id"
        ]
      },
      "GetDeviceAttestationChallengeRequest": {
        "type": "object",
        "properties": {
          "android_package_name": {
            "description": "required if running footprint sdk in android",
            "type": "string"
          },
          "device_type": {
            "type": "string",
            "enum": [
              "ios",
              "android"
            ]
          },
          "ios_bundle_id": {
            "description": "required if running footprint sdk in ios",
            "type": "string"
          }
        },
        "required": [
          "device_type"
        ]
      },
      "GetSdkArgsTokenResponse": {
        "type": "object",
        "properties": {
          "args": {
            "type": "string"
          },
          "ob_config": {
            "description": "The public onboarding configuration",
            "type": "object",
            "properties": {
              "allow_international_residents": {
                "type": "boolean"
              },
              "allowed_origins": {
                "description": "allow list of origins permitted to host the embedded flow",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "app_clip_experience_id": {
                "type": "string"
              },
              "appearance": {
                "type": "object"
              },
              "can_make_real_doc_scan_calls_in_sandbox": {
                "type": "boolean"
              },
              "doc_scan_required_if_ssn_skipped": {
                "type": "boolean"
              },
              "is_app_clip_enabled": {
                "type": "boolean"
              },
              "is_instant_app_enabled": {
                "type": "boolean"
              },
              "is_kyb": {
                "type": "boolean"
              },
              "is_live": {
                "type": "boolean"
              },
              "is_no_phone_flow": {
                "type": "boolean"
              },
              "is_stepup_enabled": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "kyc",
                  "kyb",
                  "auth",
                  "document"
                ]
              },
              "logo_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nid_enabled": {
                "type": "boolean"
              },
              "org_id": {
                "type": "string"
              },
              "org_name": {
                "type": "string"
              },
              "privacy_policy_url": {
                "type": "string"
              },
              "required_auth_methods": {
                "description": "When non-null, the provided auth methods are required to be verified by the playbook. Null\n does not mean that no auth is required - it just means the playbook doesn't care which\n method is used.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "phone",
                    "passkey",
                    "email"
                  ]
                }
              },
              "requires_id_doc": {
                "type": "boolean"
              },
              "status": {
                "type": "string",
                "enum": [
                  "disabled",
                  "enabled"
                ]
              },
              "support_email": {
                "type": "string"
              },
              "support_phone": {
                "type": "string"
              },
              "support_website": {
                "type": "string"
              },
              "supported_countries": {
                "type": "array",
                "items": {
                  "description": "list of valid iso3166-alpha-2 country codes, from https://datahub.io/core/country-codes#data\n eventually we should maybe just pony up and pay for the subscription to iso: https://www.iso.org/publication/PUB500001.html\n Channel islands does not have a country code",
                  "type": "string",
                  "enum": [
                    "TW",
                    "AF",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "VG",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "HK",
                    "MO",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CK",
                    "CR",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "CI",
                    "KP",
                    "CD",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "MP",
                    "NO",
                    "OM",
                    "PK",
                    "PW",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "KR",
                    "MD",
                    "RO",
                    "RU",
                    "RW",
                    "RE",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "ZA",
                    "GS",
                    "SS",
                    "ES",
                    "LK",
                    "PS",
                    "SD",
                    "SR",
                    "SJ",
                    "SE",
                    "CH",
                    "SY",
                    "TJ",
                    "TH",
                    "MK",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "TZ",
                    "UM",
                    "VI",
                    "US",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW",
                    "AX"
                  ]
                }
              }
            },
            "required": [
              "allow_international_residents",
              "app_clip_experience_id",
              "can_make_real_doc_scan_calls_in_sandbox",
              "is_app_clip_enabled",
              "is_instant_app_enabled",
              "is_kyb",
              "is_live",
              "is_no_phone_flow",
              "is_stepup_enabled",
              "key",
              "kind",
              "name",
              "org_id",
              "org_name",
              "requires_id_doc",
              "status",
              "supported_countries"
            ]
          }
        },
        "required": [
          "args"
        ]
      },
      "GetUserTokenResponse": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sign_up",
                "auth",
                "basic_profile",
                "sensitive_profile",
                "handoff",
                "vault_data",
                "explicit_auth"
              ]
            }
          }
        },
        "required": [
          "expires_at",
          "scopes"
        ]
      },
      "HostedBusiness": {
        "type": "object",
        "properties": {
          "invited": {
            "description": "Information on the secondary BO that was pre-populated by the primary BO",
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "phone_number"
            ]
          },
          "inviter": {
            "description": "The primary business owner that invited you to fill out a KYC form",
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            },
            "required": [
              "first_name",
              "last_name"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "invited",
          "inviter",
          "name"
        ]
      },
      "HostedValidateResponse": {
        "type": "object",
        "properties": {
          "validation_token": {
            "description": "An cryptographically generated auth token to authenticate a session",
            "type": "string"
          }
        },
        "required": [
          "validation_token"
        ],
        "title": ""
      },
      "IdentifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "identifier": {
            "description": "TODO deprecate",
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "scope": {
            "description": "Determines which scopes the issued auth token will have. Request the correct scopes for your\n use case in order to get the least permissions required",
            "type": "string",
            "enum": [
              "my1fp",
              "onboarding",
              "auth"
            ]
          }
        },
        "required": [
          "scope"
        ]
      },
      "IdentifyResponse": {
        "type": "object",
        "properties": {
          "user": {
            "description": "All of the context on the identified user, if found",
            "type": "object",
            "properties": {
              "auth_methods": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "is_verified": {
                      "type": "boolean"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "phone",
                        "passkey",
                        "email"
                      ]
                    }
                  },
                  "required": [
                    "is_verified",
                    "kind"
                  ]
                }
              },
              "available_challenge_kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "sms",
                    "biometric",
                    "email"
                  ]
                }
              },
              "can_initiate_signup_challenge": {
                "description": "When true, allowed to create a new user via a signup challenge even when there's already an\n existing user with this contact info. Generally, a user can make a new vault IF they're not\n in a context logging into a tenant that they've already onboarded onto",
                "type": "boolean"
              },
              "has_syncable_passkey": {
                "description": "Signals that one or more biometric credentials support syncing and may be available to use\n on desktop/other devices",
                "type": "boolean"
              },
              "is_unverified": {
                "type": "boolean"
              },
              "matching_fps": {
                "description": "The list of DataIdentifiers whose fingerprints matched on the vault",
                "type": "array",
                "items": {
                  "description": "Represents a piece of data stored inside the vault.",
                  "type": "string",
                  "enum": [
                    "id.first_name",
                    "id.middle_name",
                    "id.last_name",
                    "id.dob",
                    "id.ssn4",
                    "id.ssn9",
                    "id.address_line1",
                    "id.address_line2",
                    "id.city",
                    "id.state",
                    "id.zip",
                    "id.country",
                    "id.email",
                    "id.phone_number",
                    "id.us_legal_status",
                    "id.visa_kind",
                    "id.visa_expiration_date",
                    "id.nationality",
                    "id.citizenships",
                    "id.drivers_license_number",
                    "id.drivers_license_state",
                    "id.itin",
                    "id.us_tax_id",
                    "business.name",
                    "business.dba",
                    "business.website",
                    "business.phone_number",
                    "business.tin",
                    "business.address_line1",
                    "business.address_line2",
                    "business.city",
                    "business.state",
                    "business.zip",
                    "business.country",
                    "business.beneficial_owners",
                    "business.kyced_beneficial_owners",
                    "business.corporation_type",
                    "business.formation_state",
                    "business.formation_date",
                    "custom.*",
                    "investor_profile.employment_status",
                    "investor_profile.occupation",
                    "investor_profile.employer",
                    "investor_profile.annual_income",
                    "investor_profile.net_worth",
                    "investor_profile.investment_goals",
                    "investor_profile.risk_tolerance",
                    "investor_profile.declarations",
                    "investor_profile.brokerage_firm_employer",
                    "investor_profile.senior_executive_symbols",
                    "investor_profile.family_member_names",
                    "investor_profile.political_organization",
                    "investor_profile.funding_sources",
                    "document.id_card.front.image",
                    "document.id_card.front.mime_type",
                    "document.id_card.back.image",
                    "document.id_card.back.mime_type",
                    "document.id_card.selfie.image",
                    "document.id_card.selfie.mime_type",
                    "document.id_card.full_name",
                    "document.id_card.dob",
                    "document.id_card.gender",
                    "document.id_card.full_address",
                    "document.id_card.document_number",
                    "document.id_card.expires_at",
                    "document.id_card.issued_at",
                    "document.id_card.issuing_state",
                    "document.id_card.issuing_country",
                    "document.id_card.ref_number",
                    "document.id_card.nationality",
                    "document.id_card.curp",
                    "document.id_card.classified_document_type",
                    "document.id_card.curp_validation_response",
                    "document.drivers_license.front.image",
                    "document.drivers_license.front.mime_type",
                    "document.drivers_license.back.image",
                    "document.drivers_license.back.mime_type",
                    "document.drivers_license.selfie.image",
                    "document.drivers_license.selfie.mime_type",
                    "document.drivers_license.full_name",
                    "document.drivers_license.dob",
                    "document.drivers_license.gender",
                    "document.drivers_license.full_address",
                    "document.drivers_license.document_number",
                    "document.drivers_license.expires_at",
                    "document.drivers_license.issued_at",
                    "document.drivers_license.issuing_state",
                    "document.drivers_license.issuing_country",
                    "document.drivers_license.ref_number",
                    "document.drivers_license.nationality",
                    "document.drivers_license.curp",
                    "document.drivers_license.classified_document_type",
                    "document.drivers_license.curp_validation_response",
                    "document.passport.front.image",
                    "document.passport.front.mime_type",
                    "document.passport.back.image",
                    "document.passport.back.mime_type",
                    "document.passport.selfie.image",
                    "document.passport.selfie.mime_type",
                    "document.passport.full_name",
                    "document.passport.dob",
                    "document.passport.gender",
                    "document.passport.full_address",
                    "document.passport.document_number",
                    "document.passport.expires_at",
                    "document.passport.issued_at",
                    "document.passport.issuing_state",
                    "document.passport.issuing_country",
                    "document.passport.ref_number",
                    "document.passport.nationality",
                    "document.passport.curp",
                    "document.passport.classified_document_type",
                    "document.passport.curp_validation_response",
                    "document.passport_card.front.image",
                    "document.passport_card.front.mime_type",
                    "document.passport_card.back.image",
                    "document.passport_card.back.mime_type",
                    "document.passport_card.selfie.image",
                    "document.passport_card.selfie.mime_type",
                    "document.passport_card.full_name",
                    "document.passport_card.dob",
                    "document.passport_card.gender",
                    "document.passport_card.full_address",
                    "document.passport_card.document_number",
                    "document.passport_card.expires_at",
                    "document.passport_card.issued_at",
                    "document.passport_card.issuing_state",
                    "document.passport_card.issuing_country",
                    "document.passport_card.ref_number",
                    "document.passport_card.nationality",
                    "document.passport_card.curp",
                    "document.passport_card.classified_document_type",
                    "document.passport_card.curp_validation_response",
                    "document.permit.front.image",
                    "document.permit.front.mime_type",
                    "document.permit.back.image",
                    "document.permit.back.mime_type",
                    "document.permit.selfie.image",
                    "document.permit.selfie.mime_type",
                    "document.permit.full_name",
                    "document.permit.dob",
                    "document.permit.gender",
                    "document.permit.full_address",
                    "document.permit.document_number",
                    "document.permit.expires_at",
                    "document.permit.issued_at",
                    "document.permit.issuing_state",
                    "document.permit.issuing_country",
                    "document.permit.ref_number",
                    "document.permit.nationality",
                    "document.permit.curp",
                    "document.permit.classified_document_type",
                    "document.permit.curp_validation_response",
                    "document.visa.front.image",
                    "document.visa.front.mime_type",
                    "document.visa.back.image",
                    "document.visa.back.mime_type",
                    "document.visa.selfie.image",
                    "document.visa.selfie.mime_type",
                    "document.visa.full_name",
                    "document.visa.dob",
                    "document.visa.gender",
                    "document.visa.full_address",
                    "document.visa.document_number",
                    "document.visa.expires_at",
                    "document.visa.issued_at",
                    "document.visa.issuing_state",
                    "document.visa.issuing_country",
                    "document.visa.ref_number",
                    "document.visa.nationality",
                    "document.visa.curp",
                    "document.visa.classified_document_type",
                    "document.visa.curp_validation_response",
                    "document.residence_document.front.image",
                    "document.residence_document.front.mime_type",
                    "document.residence_document.back.image",
                    "document.residence_document.back.mime_type",
                    "document.residence_document.selfie.image",
                    "document.residence_document.selfie.mime_type",
                    "document.residence_document.full_name",
                    "document.residence_document.dob",
                    "document.residence_document.gender",
                    "document.residence_document.full_address",
                    "document.residence_document.document_number",
                    "document.residence_document.expires_at",
                    "document.residence_document.issued_at",
                    "document.residence_document.issuing_state",
                    "document.residence_document.issuing_country",
                    "document.residence_document.ref_number",
                    "document.residence_document.nationality",
                    "document.residence_document.curp",
                    "document.residence_document.classified_document_type",
                    "document.residence_document.curp_validation_response",
                    "document.voter_identification.front.image",
                    "document.voter_identification.front.mime_type",
                    "document.voter_identification.back.image",
                    "document.voter_identification.back.mime_type",
                    "document.voter_identification.selfie.image",
                    "document.voter_identification.selfie.mime_type",
                    "document.voter_identification.full_name",
                    "document.voter_identification.dob",
                    "document.voter_identification.gender",
                    "document.voter_identification.full_address",
                    "document.voter_identification.document_number",
                    "document.voter_identification.expires_at",
                    "document.voter_identification.issued_at",
                    "document.voter_identification.issuing_state",
                    "document.voter_identification.issuing_country",
                    "document.voter_identification.ref_number",
                    "document.voter_identification.nationality",
                    "document.voter_identification.curp",
                    "document.voter_identification.classified_document_type",
                    "document.voter_identification.curp_validation_response",
                    "document.finra_compliance_letter",
                    "document.proof_of_address.image",
                    "document.ssn_card.image",
                    "document.custom.*",
                    "card.*.number",
                    "card.*.expiration",
                    "card.*.cvc",
                    "card.*.name",
                    "card.*.billing_address.zip",
                    "card.*.billing_address.country",
                    "card.*.expiration_month",
                    "card.*.expiration_year",
                    "card.*.number_last4",
                    "card.*.issuer",
                    "bank.*.name",
                    "bank.*.ach_routing_number",
                    "bank.*.ach_account_number",
                    "bank.*.ach_account_id",
                    "bank.*.account_type"
                  ]
                }
              },
              "scrubbed_email": {
                "description": "Populated only when identifying a user via auth token that was created by the tenant",
                "type": "string"
              },
              "scrubbed_phone": {
                "type": "string"
              },
              "token": {
                "description": "An cryptographically generated auth token to authenticate a session",
                "type": "string"
              },
              "token_scopes": {
                "description": "The scopes of the returned token",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "sign_up",
                    "auth",
                    "basic_profile",
                    "sensitive_profile",
                    "handoff",
                    "vault_data",
                    "explicit_auth"
                  ]
                }
              }
            },
            "required": [
              "auth_methods",
              "available_challenge_kinds",
              "can_initiate_signup_challenge",
              "has_syncable_passkey",
              "is_unverified",
              "matching_fps",
              "token",
              "token_scopes"
            ]
          }
        }
      },
      "IdentifyVerifyRequest": {
        "type": "object",
        "properties": {
          "challenge_response": {
            "type": "string"
          },
          "challenge_token": {
            "description": "Opaque challenge state token",
            "type": "string"
          },
          "scope": {
            "description": "Determines which scopes the issued auth token will have. Request the correct scopes for your\n use case in order to get the least permissions required",
            "type": "string",
            "enum": [
              "my1fp",
              "onboarding",
              "auth"
            ]
          }
        },
        "required": [
          "challenge_response",
          "challenge_token",
          "scope"
        ],
        "title": ""
      },
      "IdentifyVerifyResponse": {
        "type": "object",
        "properties": {
          "auth_token": {
            "description": "An cryptographically generated auth token to authenticate a session",
            "type": "string"
          }
        },
        "required": [
          "auth_token"
        ]
      },
      "KbaResponse": {
        "type": "object",
        "properties": {
          "token": {
            "description": "An cryptographically generated auth token to authenticate a session",
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "LiteIdentifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "LiteIdentifyResponse": {
        "type": "object",
        "properties": {
          "user_found": {
            "type": "boolean"
          }
        },
        "required": [
          "user_found"
        ]
      },
      "LogBody": {
        "type": "object",
        "properties": {
          "log_level": {
            "type": "string"
          },
          "log_message": {
            "type": "string"
          },
          "sdk_kind": {
            "description": "Really SdkArgsKind, but prefer for this telemetry API to be unopinionated on validation",
            "type": "string"
          },
          "sdk_name": {
            "type": "string"
          },
          "sdk_version": {
            "type": "string"
          },
          "session_id": {
            "type": "string"
          },
          "tenant_domain": {
            "type": "string"
          }
        }
      },
      "LoginChallengeRequest": {
        "type": "object",
        "properties": {
          "challenge_kind": {
            "type": "string",
            "enum": [
              "sms",
              "biometric",
              "email"
            ]
          }
        },
        "required": [
          "challenge_kind"
        ]
      },
      "LoginChallengeResponse": {
        "type": "object",
        "properties": {
          "challenge_data": {
            "type": "object",
            "properties": {
              "biometric_challenge_json": {
                "type": "string"
              },
              "challenge_kind": {
                "type": "string",
                "enum": [
                  "sms",
                  "biometric",
                  "email"
                ]
              },
              "challenge_token": {
                "description": "Encrypted, base64-encoded challenge information",
                "type": "string"
              },
              "time_before_retry_s": {
                "type": "integer",
                "format": "int64"
              },
              "token": {
                "description": "Auth token to pass to the verify call",
                "type": "string"
              }
            },
            "required": [
              "challenge_kind",
              "challenge_token",
              "time_before_retry_s",
              "token"
            ]
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "challenge_data"
        ]
      },
      "NeuroIdentityIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "OnboardingResponse": {
        "type": "object",
        "properties": {
          "auth_token": {
            "type": "string"
          },
          "onboarding_config": {
            "description": "The public onboarding configuration",
            "type": "object",
            "properties": {
              "allow_international_residents": {
                "type": "boolean"
              },
              "allowed_origins": {
                "description": "allow list of origins permitted to host the embedded flow",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "app_clip_experience_id": {
                "type": "string"
              },
              "appearance": {
                "type": "object"
              },
              "can_make_real_doc_scan_calls_in_sandbox": {
                "type": "boolean"
              },
              "doc_scan_required_if_ssn_skipped": {
                "type": "boolean"
              },
              "is_app_clip_enabled": {
                "type": "boolean"
              },
              "is_instant_app_enabled": {
                "type": "boolean"
              },
              "is_kyb": {
                "type": "boolean"
              },
              "is_live": {
                "type": "boolean"
              },
              "is_no_phone_flow": {
                "type": "boolean"
              },
              "is_stepup_enabled": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "kyc",
                  "kyb",
                  "auth",
                  "document"
                ]
              },
              "logo_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nid_enabled": {
                "type": "boolean"
              },
              "org_id": {
                "type": "string"
              },
              "org_name": {
                "type": "string"
              },
              "privacy_policy_url": {
                "type": "string"
              },
              "required_auth_methods": {
                "description": "When non-null, the provided auth methods are required to be verified by the playbook. Null\n does not mean that no auth is required - it just means the playbook doesn't care which\n method is used.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "phone",
                    "passkey",
                    "email"
                  ]
                }
              },
              "requires_id_doc": {
                "type": "boolean"
              },
              "status": {
                "type": "string",
                "enum": [
                  "disabled",
                  "enabled"
                ]
              },
              "support_email": {
                "type": "string"
              },
              "support_phone": {
                "type": "string"
              },
              "support_website": {
                "type": "string"
              },
              "supported_countries": {
                "type": "array",
                "items": {
                  "description": "list of valid iso3166-alpha-2 country codes, from https://datahub.io/core/country-codes#data\n eventually we should maybe just pony up and pay for the subscription to iso: https://www.iso.org/publication/PUB500001.html\n Channel islands does not have a country code",
                  "type": "string",
                  "enum": [
                    "TW",
                    "AF",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "VG",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "HK",
                    "MO",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CK",
                    "CR",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "CI",
                    "KP",
                    "CD",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "MP",
                    "NO",
                    "OM",
                    "PK",
                    "PW",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "KR",
                    "MD",
                    "RO",
                    "RU",
                    "RW",
                    "RE",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "ZA",
                    "GS",
                    "SS",
                    "ES",
                    "LK",
                    "PS",
                    "SD",
                    "SR",
                    "SJ",
                    "SE",
                    "CH",
                    "SY",
                    "TJ",
                    "TH",
                    "MK",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "TZ",
                    "UM",
                    "VI",
                    "US",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW",
                    "AX"
                  ]
                }
              }
            },
            "required": [
              "allow_international_residents",
              "app_clip_experience_id",
              "can_make_real_doc_scan_calls_in_sandbox",
              "is_app_clip_enabled",
              "is_instant_app_enabled",
              "is_kyb",
              "is_live",
              "is_no_phone_flow",
              "is_stepup_enabled",
              "key",
              "kind",
              "name",
              "org_id",
              "org_name",
              "requires_id_doc",
              "status",
              "supported_countries"
            ]
          }
        },
        "required": [
          "auth_token",
          "onboarding_config"
        ]
      },
      "OnboardingSessionResponse": {
        "type": "object",
        "properties": {
          "bootstrap_data": {
            "type": "object"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "bootstrap_data"
        ]
      },
      "OnboardingStatusResponse": {
        "type": "object",
        "properties": {
          "all_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Requirement"
            }
          },
          "ob_configuration": {
            "description": "The public onboarding configuration",
            "type": "object",
            "required": [
              "allow_international_residents",
              "app_clip_experience_id",
              "can_make_real_doc_scan_calls_in_sandbox",
              "is_app_clip_enabled",
              "is_instant_app_enabled",
              "is_kyb",
              "is_live",
              "is_no_phone_flow",
              "is_stepup_enabled",
              "key",
              "kind",
              "name",
              "org_id",
              "org_name",
              "requires_id_doc",
              "status",
              "supported_countries"
            ],
            "properties": {
              "allow_international_residents": {
                "type": "boolean"
              },
              "allowed_origins": {
                "description": "allow list of origins permitted to host the embedded flow",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "app_clip_experience_id": {
                "type": "string"
              },
              "appearance": {
                "type": "object"
              },
              "can_make_real_doc_scan_calls_in_sandbox": {
                "type": "boolean"
              },
              "doc_scan_required_if_ssn_skipped": {
                "type": "boolean"
              },
              "is_app_clip_enabled": {
                "type": "boolean"
              },
              "is_instant_app_enabled": {
                "type": "boolean"
              },
              "is_kyb": {
                "type": "boolean"
              },
              "is_live": {
                "type": "boolean"
              },
              "is_no_phone_flow": {
                "type": "boolean"
              },
              "is_stepup_enabled": {
                "type": "boolean"
              },
              "key": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "kyc",
                  "kyb",
                  "auth",
                  "document"
                ]
              },
              "logo_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nid_enabled": {
                "type": "boolean"
              },
              "org_id": {
                "type": "string"
              },
              "org_name": {
                "type": "string"
              },
              "privacy_policy_url": {
                "type": "string"
              },
              "required_auth_methods": {
                "description": "When non-null, the provided auth methods are required to be verified by the playbook. Null\n does not mean that no auth is required - it just means the playbook doesn't care which\n method is used.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "phone",
                    "passkey",
                    "email"
                  ]
                }
              },
              "requires_id_doc": {
                "type": "boolean"
              },
              "status": {
                "type": "string",
                "enum": [
                  "disabled",
                  "enabled"
                ]
              },
              "support_email": {
                "type": "string"
              },
              "support_phone": {
                "type": "string"
              },
              "support_website": {
                "type": "string"
              },
              "supported_countries": {
                "type": "array",
                "items": {
                  "description": "list of valid iso3166-alpha-2 country codes, from https://datahub.io/core/country-codes#data\n eventually we should maybe just pony up and pay for the subscription to iso: https://www.iso.org/publication/PUB500001.html\n Channel islands does not have a country code",
                  "type": "string",
                  "enum": [
                    "TW",
                    "AF",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "VG",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "HK",
                    "MO",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CK",
                    "CR",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "CI",
                    "KP",
                    "CD",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "MP",
                    "NO",
                    "OM",
                    "PK",
                    "PW",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "KR",
                    "MD",
                    "RO",
                    "RU",
                    "RW",
                    "RE",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "ZA",
                    "GS",
                    "SS",
                    "ES",
                    "LK",
                    "PS",
                    "SD",
                    "SR",
                    "SJ",
                    "SE",
                    "CH",
                    "SY",
                    "TJ",
                    "TH",
                    "MK",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "TZ",
                    "UM",
                    "VI",
                    "US",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW",
                    "AX"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "all_requirements",
          "ob_configuration"
        ]
      },
      "PostOnboardingRequest": {
        "type": "object",
        "properties": {
          "fixture_result": {
            "type": "string",
            "enum": [
              "fail",
              "pass",
              "manual_review",
              "step_up",
              "use_rules_outcome"
            ]
          },
          "kyb_fixture_result": {
            "type": "string",
            "enum": [
              "fail",
              "pass",
              "manual_review",
              "step_up",
              "use_rules_outcome"
            ]
          }
        }
      },
      "ProcessRequest": {
        "type": "object",
        "properties": {
          "fixture_result": {
            "type": "string",
            "enum": [
              "fail",
              "pass",
              "manual_review",
              "step_up",
              "use_rules_outcome"
            ]
          }
        }
      },
      "PublicOnboardingConfiguration": {
        "description": "The public onboarding configuration",
        "type": "object",
        "properties": {
          "allow_international_residents": {
            "type": "boolean"
          },
          "allowed_origins": {
            "description": "allow list of origins permitted to host the embedded flow",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "app_clip_experience_id": {
            "type": "string"
          },
          "appearance": {
            "type": "object"
          },
          "can_make_real_doc_scan_calls_in_sandbox": {
            "type": "boolean"
          },
          "doc_scan_required_if_ssn_skipped": {
            "type": "boolean"
          },
          "is_app_clip_enabled": {
            "type": "boolean"
          },
          "is_instant_app_enabled": {
            "type": "boolean"
          },
          "is_kyb": {
            "type": "boolean"
          },
          "is_live": {
            "type": "boolean"
          },
          "is_no_phone_flow": {
            "type": "boolean"
          },
          "is_stepup_enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "kyc",
              "kyb",
              "auth",
              "document"
            ]
          },
          "logo_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nid_enabled": {
            "type": "boolean"
          },
          "org_id": {
            "type": "string"
          },
          "org_name": {
            "type": "string"
          },
          "privacy_policy_url": {
            "type": "string"
          },
          "required_auth_methods": {
            "description": "When non-null, the provided auth methods are required to be verified by the playbook. Null\n does not mean that no auth is required - it just means the playbook doesn't care which\n method is used.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "phone",
                "passkey",
                "email"
              ]
            }
          },
          "requires_id_doc": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "disabled",
              "enabled"
            ]
          },
          "support_email": {
            "type": "string"
          },
          "support_phone": {
            "type": "string"
          },
          "support_website": {
            "type": "string"
          },
          "supported_countries": {
            "type": "array",
            "items": {
              "description": "list of valid iso3166-alpha-2 country codes, from https://datahub.io/core/country-codes#data\n eventually we should maybe just pony up and pay for the subscription to iso: https://www.iso.org/publication/PUB500001.html\n Channel islands does not have a country code",
              "type": "string",
              "enum": [
                "TW",
                "AF",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "VG",
                "BN",
                "BG",
                "BF",
                "BI",
                "CV",
                "KH",
                "CM",
                "CA",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "HK",
                "MO",
                "CX",
                "CC",
                "CO",
                "KM",
                "CG",
                "CK",
                "CR",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "CI",
                "KP",
                "CD",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "SZ",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "KR",
                "MD",
                "RO",
                "RU",
                "RW",
                "RE",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "PS",
                "SD",
                "SR",
                "SJ",
                "SE",
                "CH",
                "SY",
                "TJ",
                "TH",
                "MK",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "GB",
                "TZ",
                "UM",
                "VI",
                "US",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW",
                "AX"
              ]
            }
          }
        },
        "required": [
          "allow_international_residents",
          "app_clip_experience_id",
          "can_make_real_doc_scan_calls_in_sandbox",
          "is_app_clip_enabled",
          "is_instant_app_enabled",
          "is_kyb",
          "is_live",
          "is_no_phone_flow",
          "is_stepup_enabled",
          "key",
          "kind",
          "name",
          "org_id",
          "org_name",
          "requires_id_doc",
          "status",
          "supported_countries"
        ]
      },
      "RawBusinessDataRequest": {
        "example": {
          "business.name": "Acme Bank",
          "business.website": "acmebank.org",
          "custom.account_id": "d0af81fc-41c2-46ca-8a8d-797b8e4d3146"
        },
        "type": "object",
        "properties": {
          "<key>": {
            "type": "string",
            "enum": [
              "business.name",
              "business.dba",
              "business.website",
              "business.phone_number",
              "business.tin",
              "business.address_line1",
              "business.address_line2",
              "business.city",
              "business.state",
              "business.zip",
              "business.country",
              "business.beneficial_owners",
              "business.kyced_beneficial_owners",
              "business.corporation_type",
              "business.formation_state",
              "business.formation_date",
              "custom.*"
            ]
          },
          "<value>": {
            "type": "object"
          }
        },
        "required": [
          "<key>",
          "<value>"
        ]
      },
      "RawUserDataRequest": {
        "$ref": "#/components/schemas/Vaultprops"
      },
      "SdkArgs": {
        "type": "string"
      },
      "SignupChallengeRequest": {
        "type": "object",
        "properties": {
          "challenge_kind": {
            "type": "string",
            "enum": [
              "sms",
              "biometric",
              "email"
            ]
          },
          "email": {
            "type": "object",
            "properties": {
              "is_bootstrap": {
                "type": "boolean"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "is_bootstrap",
              "value"
            ]
          },
          "phone_number": {
            "type": "object",
            "properties": {
              "is_bootstrap": {
                "type": "boolean"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "is_bootstrap",
              "value"
            ]
          },
          "scope": {
            "type": "string",
            "enum": [
              "my1fp",
              "onboarding",
              "auth"
            ]
          }
        },
        "required": [
          "challenge_kind",
          "scope"
        ]
      },
      "SignupChallengeResponse": {
        "type": "object",
        "properties": {
          "challenge_data": {
            "type": "object",
            "properties": {
              "biometric_challenge_json": {
                "type": "string"
              },
              "challenge_kind": {
                "type": "string",
                "enum": [
                  "sms",
                  "biometric",
                  "email"
                ]
              },
              "challenge_token": {
                "description": "Encrypted, base64-encoded challenge information",
                "type": "string"
              },
              "time_before_retry_s": {
                "type": "integer",
                "format": "int64"
              },
              "token": {
                "description": "Auth token to pass to the verify call",
                "type": "string"
              }
            },
            "required": [
              "challenge_kind",
              "challenge_token",
              "time_before_retry_s",
              "token"
            ]
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "challenge_data"
        ]
      },
      "SkipPasskeyRegisterRequest": {
        "type": "object",
        "properties": {
          "context": {
            "type": "object",
            "properties": {
              "attempts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "elapsed_time_in_os_prompt_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "error_message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error_message"
                  ]
                }
              },
              "client_type": {
                "type": "string",
                "enum": [
                  "web",
                  "mobile"
                ]
              },
              "num_attempts": {
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "type": "string"
              }
            },
            "required": [
              "attempts",
              "client_type",
              "num_attempts",
              "reason"
            ]
          }
        }
      },
      "SocureDeviceSessionIdRequest": {
        "type": "object",
        "properties": {
          "device_session_id": {
            "type": "string"
          }
        },
        "required": [
          "device_session_id"
        ]
      },
      "StytchTelemetryRequest": {
        "type": "object",
        "properties": {
          "telemetry_id": {
            "type": "string"
          }
        },
        "required": [
          "telemetry_id"
        ]
      },
      "UserChallengeRequest": {
        "type": "object",
        "properties": {
          "action_kind": {
            "description": "Specifies whether to add the new auth method alongside existing auth methods or replace the\n existing method.",
            "type": "string",
            "enum": [
              "replace",
              "add_primary"
            ]
          },
          "email": {
            "description": "If the challenge kind is email, the email address to send the challenge to",
            "type": "string"
          },
          "kind": {
            "description": "The kind of auth method for which to initiate a challenge",
            "type": "string",
            "enum": [
              "phone",
              "passkey",
              "email"
            ]
          },
          "phone_number": {
            "description": "If the challenge kind is SMS, the phone number to send the challenge to",
            "type": "string"
          }
        },
        "required": [
          "action_kind",
          "kind"
        ]
      },
      "UserChallengeResponse": {
        "type": "object",
        "properties": {
          "biometric_challenge_json": {
            "description": "If the challenge kind is biometric, the challenge JSON for the browser",
            "type": "string"
          },
          "challenge_token": {
            "description": "Information saved client side and sent back with the challenge response",
            "type": "string"
          },
          "time_before_retry_s": {
            "description": "The timeout until you're allowed to initiate another challenge",
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "challenge_token",
          "time_before_retry_s"
        ]
      },
      "UserChallengeVerifyRequest": {
        "type": "object",
        "properties": {
          "challenge_response": {
            "description": "The response to the challenge. Either SMS/email PIN code or passkey response",
            "type": "string"
          },
          "challenge_token": {
            "description": "The token given from initiating the challenge",
            "type": "string"
          }
        },
        "required": [
          "challenge_response",
          "challenge_token"
        ]
      },
      "UserDecryptRequest": {
        "type": "object",
        "properties": {
          "fields": {
            "example": [
              "id.first_name",
              "id.last_name"
            ],
            "description": "List of data identifiers to decrypt. For example, `id.first_name`, `id.ssn4`,\n `custom.bank_account`",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultDI"
            }
          },
          "reason": {
            "example": "Lorem ipsum dolor",
            "description": "Reason for the data decryption. This will be logged",
            "type": "string"
          },
          "transforms": {
            "example": null,
            "description": "A list of filter and transform functions to apply to each decrypted datum.\n Omit or leave empty to apply no transforms.\n Can find more information on allowed transform functions on our docs",
            "type": "array",
            "items": {
              "description": "Represents a data transform to apply to underlying plaintext behind a data identifier. Specify only one of the following fields. See more here: https://docs.onefootprint.com/articles/vault/proxy#filter-functions",
              "type": "string",
              "enum": [
                "to_lowercase",
                "to_uppercase",
                "to_ascii",
                "prefix(<n>)",
                "suffix(<n>)",
                "replace('<from>','<to>')",
                "date_format('<from_format>','<to_format>')",
                "hmac_sha256('<key>')",
                "encrypt('<algorithm>','<public_key>')"
              ]
            }
          },
          "version_at": {
            "example": null,
            "description": "When provided, decrypts the user's data as it existed at the provided timestamp.\n Provided as an ISO 8601 timestamp string, like `2024-01-01T12:00:00Z`.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserDecryptResponse": {
        "$ref": "#/components/schemas/RawUserDataRequest"
      },
      "Vaultprops": {
        "title": "VaultProps",
        "x-stoplight": {
          "id": "uq84qpudiffq1"
        },
        "type": "object",
        "properties": {
          "id.address_line1": {
            "type": "string"
          },
          "id.address_line2": {
            "type": "string"
          },
          "id.citizenships": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            },
            "description": "Array of 2 letter country codes"
          },
          "id.city": {
            "type": "string"
          },
          "id.country": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "description": "2 letter country code"
          },
          "id.dob": {
            "type": "string"
          },
          "id.drivers_license_number": {
            "type": "string"
          },
          "id.drivers_license_state": {
            "type": "string"
          },
          "id.email": {
            "type": "string"
          },
          "id.first_name": {
            "type": "string"
          },
          "id.itin": {
            "type": "string"
          },
          "id.last_name": {
            "type": "string"
          },
          "id.middle_name": {
            "type": "string"
          },
          "id.nationality": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "description": "2 letter country code"
          },
          "id.phone_number": {
            "type": "string"
          },
          "id.ssn4": {
            "type": "string"
          },
          "id.ssn9": {
            "type": "string"
          },
          "id.state": {
            "type": "string"
          },
          "id.us_legal_status": {
            "type": "string"
          },
          "id.us_tax_id": {
            "type": "string"
          },
          "id.visa_expiration_date": {
            "type": "string"
          },
          "id.visa_kind": {
            "type": "string"
          },
          "id.zip": {
            "type": "string"
          },
          "investor_profile.employment_status": {
            "type": "string",
            "enum": [
              "employed",
              "unemployed",
              "student",
              "retired"
            ]
          },
          "investor_profile.occupation": {
            "type": "string"
          },
          "investor_profile.employer": {
            "type": "string"
          },
          "investor_profile.annual_income": {
            "type": "string",
            "enum": [
              "le25k",
              "gt25k_le50k",
              "gt50k_le100k",
              "gt100k_le200k",
              "gt200k_le300k",
              "gt300k_le500k",
              "gt500k_le1200k"
            ]
          },
          "investor_profile.net_worth": {
            "type": "string",
            "enum": [
              "le50k",
              "gt50k_le100k",
              "gt100k_le200k",
              "gt200k_le500k",
              "gt500k_le1m",
              "gt1m_le5m",
              "gt5m"
            ]
          },
          "investor_profile.funding_sources": {
            "type": "string",
            "enum": [
              "employment_income",
              "investments",
              "inheritance",
              "business_income",
              "savings",
              "family"
            ]
          },
          "investor_profile.investment_goals": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "growth",
                "income",
                "preserve_capital",
                "speculation",
                "diversification",
                "other"
              ]
            }
          },
          "investor_profile.risk_tolerance": {
            "type": "string",
            "enum": [
              "conservative",
              "moderate",
              "aggressive"
            ]
          },
          "investor_profile.declarations": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "affiliated_with_us_broker",
                "senior_executive",
                "senior_political_figure"
              ]
            }
          },
          "investor_profile.senior_executive_symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "investor_profile.family_member_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "investor_profile.political_organization": {
            "type": "string"
          },
          "investor_profile.brokerage_firm_employer": {
            "type": "string"
          }
        }
      },
      "VaultBadRequestResponse": {
        "title": "VaultBadRequestResponse",
        "x-stoplight": {
          "id": "4j8q21t7xpgoj"
        },
        "allOf": [
          {
            "type": "object",
            "properties": {
              "context": {
                "$ref": "#/components/schemas/Vaultprops"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ]
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "x-stoplight": {
          "id": "rpx1iamcwqamh"
        },
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "x-stoplight": {
              "id": "j03btiz4kymmb"
            }
          },
          "debug": {
            "type": "string",
            "x-stoplight": {
              "id": "n77dpb6b6yblc"
            }
          },
          "message": {
            "type": "string",
            "x-stoplight": {
              "id": "o2k2bao7ba40l"
            }
          },
          "support_id": {
            "type": "string",
            "x-stoplight": {
              "id": "3iitwccogx689"
            }
          }
        },
        "required": [
          "debug",
          "message",
          "support_id"
        ]
      },
      "Requirement": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CollectDataRequirement"
          },
          {
            "$ref": "#/components/schemas/RegisterAuthMethodRequirement"
          },
          {
            "$ref": "#/components/schemas/RegisterPasskeyRequirement"
          },
          {
            "$ref": "#/components/schemas/DocumentRequirement"
          },
          {
            "$ref": "#/components/schemas/AuthorizeRequirement"
          },
          {
            "$ref": "#/components/schemas/ProcessRequirement"
          },
          {
            "$ref": "#/components/schemas/CollectInvestorProfileRequirement"
          }
        ]
      },
      "RegisterAuthMethodRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "register_auth_method"
            ]
          },
          "is_met": {
            "type": "boolean"
          },
          "auth_method_kind": {
            "type": "string",
            "enum": [
              "phone",
              "email",
              "passkey"
            ]
          }
        },
        "required": [
          "kind",
          "is_met",
          "auth_method_kind"
        ]
      },
      "CollectInvestorProfileRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "investor_profile"
            ]
          },
          "is_met": {
            "type": "boolean"
          },
          "missing_attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "investor_profile"
              ]
            }
          }
        },
        "required": [
          "kind",
          "is_met",
          "missing_attributes"
        ]
      },
      "RegisterPasskeyRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "liveness"
            ]
          },
          "is_met": {
            "type": "boolean"
          }
        },
        "required": [
          "kind",
          "is_met"
        ]
      },
      "AuthorizeRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "authorize"
            ]
          },
          "is_met": {
            "type": "boolean"
          },
          "fields_to_authorize": {
            "$ref": "#/components/schemas/AuthorizeFields"
          }
        },
        "required": [
          "kind",
          "is_met",
          "fields_to_authorize"
        ]
      },
      "ProcessRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "process"
            ]
          },
          "is_met": {
            "type": "boolean"
          }
        },
        "required": [
          "kind",
          "is_met"
        ]
      },
      "AuthorizeFields": {
        "type": "object",
        "additionalProperties": true
      },
      "DocumentRequirement": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "collect_document"
            ]
          },
          "is_met": {
            "type": "boolean"
          },
          "document_request_id": {
            "type": "string"
          },
          "upload_settings": {
            "type": "string",
            "enum": [
              "prefer_capture",
              "prefer_upload",
              "captureOnlyOnMobile"
            ]
          },
          "config": {
            "$ref": "#/components/schemas/DocumentRequirementConfig"
          }
        },
        "required": [
          "kind",
          "is_met",
          "document_request_id",
          "upload_settings",
          "config"
        ]
      },
      "DocumentRequirementConfig": {
        "type": "object",
        "additionalProperties": true
      },
      "CollectDataRequirement": {
        "title": "CollectDataRequirement",
        "x-stoplight": {
          "id": "174ucogrx7pqa"
        },
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "x-stoplight": {
              "id": "vbb7frow4y61h"
            },
            "enum": [
              "collect_data"
            ]
          },
          "is_met": {
            "type": "boolean",
            "x-stoplight": {
              "id": "gk97bfp1yo05j"
            }
          },
          "missing_attributes": {
            "type": "array",
            "x-stoplight": {
              "id": "943mbivrbh2np"
            },
            "items": {
              "$ref": "#/components/schemas/CollectedAttributes"
            }
          },
          "optional_attributes": {
            "x-stoplight": {
              "id": "lopnl6iblh8na"
            },
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectedAttributes"
            }
          },
          "populated_attributes": {
            "x-stoplight": {
              "id": "y2yfoogiqkysn"
            },
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectedAttributes"
            }
          }
        },
        "required": [
          "kind",
          "is_met",
          "missing_attributes",
          "optional_attributes",
          "populated_attributes"
        ]
      },
      "VaultDI": {
        "title": "VaultDI",
        "x-stoplight": {
          "id": "0g6zxyf7w5p8k"
        },
        "type": "string",
        "enum": [
          "id.first_name",
          "id.middle_name",
          "id.last_name",
          "id.dob",
          "id.ssn4",
          "id.ssn9",
          "id.address_line1",
          "id.address_line2",
          "id.city",
          "id.state",
          "id.zip",
          "id.country",
          "id.email",
          "id.phone_number",
          "id.us_legal_status",
          "id.visa_kind",
          "id.visa_expiration_date",
          "id.nationality",
          "id.citizenships",
          "id.drivers_license_number",
          "id.drivers_license_state",
          "id.itin",
          "id.us_tax_id",
          "custom.*",
          "investor_profile.employment_status",
          "investor_profile.occupation",
          "investor_profile.employer",
          "investor_profile.annual_income",
          "investor_profile.net_worth",
          "investor_profile.investment_goals",
          "investor_profile.risk_tolerance",
          "investor_profile.declarations",
          "investor_profile.brokerage_firm_employer",
          "investor_profile.senior_executive_symbols",
          "investor_profile.family_member_names",
          "investor_profile.political_organization",
          "investor_profile.funding_sources"
        ]
      },
      "CollectedAttributes": {
        "title": "CollectedAttributes",
        "x-stoplight": {
          "id": "cn0jdufe6clko"
        },
        "type": "string",
        "enum": [
          "name",
          "dob",
          "ssn4",
          "ssn9",
          "full_address",
          "email",
          "phone_number",
          "nationality",
          "us_legal_status",
          "us_tax_id",
          "investor_profile"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "PublicApi"
    },
    {
      "name": "Preview"
    }
  ]
}
